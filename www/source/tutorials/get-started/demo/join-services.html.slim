---
title: Habitat - Join Services Together
---

section
  h2 Join Services Together

  p Having your applications automatically discover their service dependencies and configure themselves accordingly is useful when you need to set up connections between tiers in a web application.

  p In our example, the PostgreSQL database service exposes a port number that the Rails application needs in order to establish a connection with it. To set up a service binding between the Rails app and the PostgreSQL database, we'll load the Rails app again, this time with a <code>--bind</code> argument composed of two parts: the name by which the Rails application will refer to the binding (<code>database</code>), and the name of the database's <a href="/docs/using-habitat/#run-packages-in-a-service-group">service group</a> (<code>postgresql.default</code>). This will allow the Rails app to configure itself on startup using the port number exposed by the database service.

  = code(:shell) do
    |
     $ hab svc load example/myrubyapp --bind database:postgresql.default

  #window-node-1.window-node
    = partial "partials/terminal" do

  #success
    p Notice that the service binding has been set, but the Rails app again fails to start, because it requires a configuration value, <code>secret_key_base</code>, that must be set before it can complete its initialization.

= link_to 'Next: Dynamically Configure Services', '/tutorials/get-started/demo/configure-services/', class: 'button cta'
